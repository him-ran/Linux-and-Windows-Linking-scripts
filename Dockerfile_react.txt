//  This docker file is helpful for deploying a React application using YARN and deploying it on an nginx platform.
### STAGE 1: Build ###
FROM node:latest AS build
WORKDIR /usr/share/app
RUN yarn config set "strict-ssl" false -g
COPY . ./
RUN yarn install
RUN yarn build
### STAGE 2: Run ###
FROM nginx:1.12-alpine
COPY nginx.conf /etc/nginx/nginx.conf
COPY localhost.crt /etc/nginx/domain.crt
COPY localhost.key /etc/nginx/domain.key
COPY --from=build /usr/share/app/build /usr/share/nginx/html
EXPOSE 80
EXPOSE 443
CMD ["nginx", "-g", "daemon off;"]



## NGINX-CONF ##
* It has for https configuration as well.

worker_processes  1;

events {
    worker_connections  1024;
}

http {
    server {
        listen 80;
        listen [::]:80;
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_tokens off;

        server_name  18.117.136.56;
        ssl_certificate    /etc/nginx/domain.crt;
        ssl_certificate_key    /etc/nginx/domain.key;
        # include /etc/nginx/options-ssl-nginx.conf;
        # ssl_dhparam /etc/nginx/ssl-dhparams.pem;

        root   /usr/share/nginx/html;
        index  index.html index.htm;
        include /etc/nginx/mime.types;

        gzip on;
        gzip_min_length 1000;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;


        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}
